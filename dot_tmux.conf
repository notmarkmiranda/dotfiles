# Create a new named window
bind N command-prompt -p name: "new-window -n '%1'"

# Remap prefix from C-b to C-a
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Switch panes using hjkl
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n 'C-h' if-shell "$is_vim" "send-keys 'C-h'" "select-pane -L"
bind -n 'C-j' if-shell "$is_vim" "send-keys 'C-j'" "select-pane -D"
bind -n 'C-k' if-shell "$is_vim" "send-keys 'C-k'" "select-pane -U"
bind -n 'C-l' if-shell "$is_vim" "send-keys 'C-l'" "select-pane -R"

# Set indices to start from 1
set -g base-index 1
setw -g pane-base-index 1

# Set 256 colors
set -g default-terminal 'screen-256color'
set -ga terminal-overrides ',xterm-246color:Tc'

# Renumber windows sequentially after closing any of them
set -g renumber-windows on

# Splitting panes
bind t split-window -p 15
bind T split-window -h -p 33
bind E split-window -h -l 80
unbind '"'
unbind %

# Status bar
set -g status on
set -g status-interval 1
set -g status-justify centre
set -g status-style fg=white,bg=black

# Enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

# Set the status line's colors
set -g status-style fg=white,bg=green,bright

# Set colors for the active window
setw -g window-status-current-style fg=white,bg=green,bright

# Command / message line colors
set -g message-style fg=white,bg=black,bright

# Set status line left side
set -g status-left-length 8

# Left justify the window list
set -g status-justify left

# Enable vi keys
setw -g mode-keys vi

# Setup 'v' to begin selection like Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection

# Quick pane selection
bind -r C-p select-window -t :-
bind -r C-n select-window -t :+

# Mouse mode
set -g mous on

# Focus pane toggle
bind Up resize-pane -Z

# Make Vim responsive to esc
set -s escape-time 2

# Break-pane into it's own window / tab
bind-key b break-pane

# Join-pane
bind-key Enter command-prompt "joinp -t:%%" # %% = prompt for window.pane [-V|H] # vert|hor split

# Status line right side to blank if we are in a cloud IDE like codio or cloud9
if-shell "test -d $HOME/workspace" "set -g status-right ''"

# Only source my tmux_mac config if we're on macOS
if-shell 'test "$(uname)" = "Darwin"' 'source ${HOME}/.tmux_mac.conf'
if-shell 'test "$(uname)" = "Linux"' 'source ${HOME}/.tmux_linux.conf'

# Reload config file
bind r source-file ~/.tmux.conf

# List of plugins
# Supports `github_username/repo` or full git repo URLS
set -g @tpm_plugs ' \
  tmux-plugins/tpm \
  tmux-plugins/tmux-sensible \
  tmux-plugins/tmux-copycat \
  tmux-plugins/tmux-resurrect \
  tmux-plugins/tmux-open \
  tmux-plugins/tmux-pain-control \
  tmux-plugins/vim-tmux-focus-events \
  tmux-plugins/tmux-better-mouse-mode \
'

setenv -g TMUX_PLUGIN_MANAGER_PATH "$HOME/.tmux/plugins"

if "test ! -d ~/.tmux/plugins/tpm" \
  "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && \
    ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initializes TMUX plugin manager
# Keep this line at the very bottom of tmux.conf
run-shell '~/.tmux/plugins/tpm/tpm'

# Timeout
set -g display-time 750